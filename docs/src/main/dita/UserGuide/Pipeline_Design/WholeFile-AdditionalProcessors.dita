<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_kgs_msy_yw">
 <title>Additional Processors</title>
 <conbody>
        <p><indexterm>whole file data format<indexterm>additional
            processors</indexterm></indexterm>You can use certain processors in a whole file
            pipeline to read the file data in the fileref field or to modify file information in the
            fileInfo field, such as the file owner or permissions.</p>
        <note
            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/WF-TIP-DataPreview"/>
        <p>You can use the following additional processors in a whole file pipeline:<dl>
                <dlentry>
                    <dt>Expression Evaluator</dt>
                    <dd>Use to update fileInfo fields. </dd>
                    <dd>For example, you might use the Expression Evaluator to update the owner of
                        the file.</dd>
                </dlentry>
                <dlentry>
                    <dt>Groovy Evaluator, JavaScript Evaluator, and Jython Evaluator</dt>
                    <dd>Use to access the fileref field by creating an input stream in the code
                        using the getInputStream() API. </dd>
                    <dd>For example, you might use the Groovy Evaluator to use Groovy code that
                        reads the file data in the fileref field and then creates new records with
                        the data.<note>Be sure to close the input stream in the code when the
                            processor has finished reading the stream.</note></dd>
                    <dd>For information about processing whole files with the Groovy Evaluator, see
                            <xref href="../Processors/Groovy_WholeFiles.dita#concept_t35_rsy_mx"
                        />.</dd>
                    <dd>For information about processing whole files with the JavaScript Evaluator,
                        see <xref href="../Processors/JavaScript_WholeFiles.dita#concept_bfr_h5y_mx"
                        />.</dd>
                    <dd>For information about processing whole files with the Jython Evaluator, see
                            <xref href="../Processors/Jython-WholeFiles.dita#concept_jrt_s5y_mx"
                        />.</dd>
                </dlentry>
            </dl><dl>
                <dlentry>
                    <dt>Stream Selector</dt>
                    <dd>Use to route files based on information in the fileInfo fields. </dd>
                    <dd>For example, you might use the Stream Selector to route records to different
                        destinations based on the size of the file. The following pipeline routes
                        files under 2 MB to a local file system and uses the default stream to route
                        all larger files to HDFS:</dd>
                    <dd><image href="../Graphics/WholeFile_Pipeline_SS.png" id="image_ydw_lsf_zw"
                            scale="70"/></dd>
                </dlentry>
            </dl></p>
 </conbody>
</concept>
