<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_sbt_qql_rz">
 <title>Examples</title>
 <conbody>
        <p>Here are some examples of how you might use webhooks:</p>
  <p>
            <dl>
                <dlentry>
                    <dt>Send webhooks to a Slack channel</dt>
                    <dd>You can configure a pipeline to send webhooks to a Slack channel. For
                        example, you could have all alerts sent to an Operations Slack channel so
                        someone on your operations team can respond to the alert.</dd>
                    <dd>To do this, you perform the following steps:<ol id="ol_rzp_mjz_rz">
                            <li>Configure Slack for incoming webhooks for the channel you want to
                                use. <p>At the time of writing, you can enable webhooks in Slack
                                    starting from <xref
                                        href="https://slack.com/apps/A0F7XDUAZ-incoming-webhooks"
                                        format="html" scope="external">this page</xref>. When you
                                    enable webhooks, Slack generates a URL for you to use. If you
                                    have already enabled webhooks, check your account information
                                    for the Slack URL.</p></li>
                            <li>Copy the URL that Slack generates and use this to configure the
                                    pipeline.<p>The URL looks something like this:
                                    <codeblock>https://hooks.slack.com/services/&lt;random string>/&lt;random string>/&lt;random string></codeblock></p><p>Slack
                                    also offers instructions on how to configure the payload. At
                                    this time, they suggest a text field with the contents of the
                                    message, like <ph
                                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                                    /> default payload. </p></li>
                            <li>Configure the webhook in the pipeline. <p>For Slack, you can just
                                    enter the URL and accept the defaults for everything else.
                                    </p><p>Here's how a Slack alert webhook might look:</p><p><image
                                        href="../Graphics/Webhook-Slack.png" id="image_xfd_5yz_rz"
                                        scale="60"/></p></li>
                        </ol></dd>
                </dlentry>
                <dlentry>
                    <dt>Start another pipeline </dt>
                    <dd>You can start a pipeline after the first pipeline completes all processing
                        using dataflow triggers, the Pipeline Finisher executor, and a state
                        notification webhook. </dd>
                    <dd>For example, say you have a JDBC Query Consumer origin that performs a full
                        query to process all legacy data in some database tables. </dd>
                    <dd>You configure the origin to generate an event when it completes processing
                        all available data, and you connect the event stream to the Pipeline
                        Finisher executor. When the Pipeline Finisher executor receives the event
                        from the JDBC Query Consumer, it transitions the pipeline to a Finished
                        state. For more information on using the Pipeline Finisher executor with
                        dataflow triggers, see <xref
                            href="../Event_Handling/CaseStudy-StopPipeline.dita#concept_kff_ykv_lz"
                        />.</dd>
                    <dd>To use this state change to start a second pipeline, configure a webhook
                        that triggers when the pipeline state changes to Finished: </dd>
                    <dd>
                        <ol id="ol_bjv_4rz_rz">
                            <li>In the pipeline properties, click the
                                    <uicontrol>Notifications</uicontrol> tab and click
                                    <uicontrol>Add</uicontrol> to add a webhook.</li>
                            <li>For the URL, enter the command to start the pipeline. <p>The command
                                    looks something like
                                    this:</p><codeblock>&lt;http|https>://&lt;system ip>.&lt;http port>/rest/v1/pipeline/&lt;pipeline id>/start</codeblock><p>For
                                    example:
                                    http://localhost:18630/rest/v1/pipeline/MyPipelinefbb6894c-08ec-421e-9e3c-4e6bbb2f5baf/start</p></li>
                            <li>Click the <uicontrol>Add</uicontrol> icon to add a request header,
                                and add the following header: <codeph>X-Requested-By</codeph><p>And
                                    set the value to: <codeph>sdc</codeph>.</p><p>You can use the
                                    default method and authentication type, and keep or delete the
                                    payload, since they aren't used by the REST API.</p><p>This is
                                    how the webhook might look:</p><p><image
                                        href="../Graphics/WebHook-RESTAPI.png" id="image_n53_fyz_rz"
                                        scale="60"/></p></li>
                        </ol>
                    </dd>
                </dlentry>
            </dl>
        </p>
 </conbody>
</concept>
