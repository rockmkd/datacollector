<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_xnp_453_ft">
 <title>Field Names with Special Characters</title>
 <shortdesc>You can use quotation marks and the backslash character to handle special characters in
  field names. </shortdesc>
 <conbody>
  <p><indexterm>expressions<indexterm>field names with special
    characters</indexterm></indexterm><indexterm>field names<indexterm>with special
     characters</indexterm></indexterm>Expression completion provides the correct syntax for field
   names with special characters. But when you need to enter the field names manually, be sure to
   use the following guidelines:<dl>
    <dlentry>
     <dt>Use quotation marks around field names with special characters</dt>
     <dd>When a field name includes special characters, surround the field name with single or
      double quotation marks as follows: <codeblock>/"&lt;field w/specialcharacter>"</codeblock>Some
      examples:<codeblock>/"Stream$ets"
/'city&amp;state'
/"product names"</codeblock></dd>
    </dlentry>
    <dlentry>
     <dt>When using multiple sets of quotation marks, alternate between types as you go</dt>
     <dd>Throughout the expression language, when using quotation marks, you can use single or
      double quotation marks. But make sure to alternate between the types when nesting quotation
      marks. </dd>
     <dd>For example: </dd>
     <dd>
      <codeblock>${record:value('/"Stream$ets"'}
${record:value("/'city&amp;state'"}</codeblock>
     </dd>
    </dlentry>
    <dlentry>
     <dt>Use a backslash as an escape character</dt>
     <dd>To use a quotation mark or backslash in a field name, use a backslash ( \ ).</dd>
     <dd>Add additional backslashes as necessary to escape quotation marks. </dd>
     <dd>For example, to use a field named "ID's" as a required field, you would use a single
      backslash: <codeblock>/ID\'s</codeblock></dd>
     <dd>To use the same field in an expression, you might need additional backslashes as
      follows:<codeblock>${record:value('/ID\\'s')}</codeblock></dd>
    </dlentry>
   </dl></p>
 </conbody>
</concept>
