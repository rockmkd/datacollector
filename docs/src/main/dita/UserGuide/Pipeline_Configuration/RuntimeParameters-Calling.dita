<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_v4k_gdt_kz">
 <title>Step 2. Call the Runtime Parameter</title>
 <shortdesc>Use an expression to call a runtime parameter. You can use runtime parameters to
        represent any stage or pipeline property that allows the use of the expression language. </shortdesc>
 <conbody>
        <p><indexterm>runtime parameters<indexterm>calling from a pipeline</indexterm></indexterm>To
            call a runtime parameter, use the following syntax:
            <codeblock>${&lt;parameter name>}</codeblock></p>
        <p>For example, to use the JDBCConnectionString runtime parameter for the JDBC Multitable
            Consumer origin, enter the following syntax for the JDBC Connection String
            property:<codeblock>${JDBCConnectionString}</codeblock></p>
        <p>You can use a runtime parameter to represent a part of a property. For example, you could
            use a RootDir runtime parameter and append the rest of the directory in the property as
            follows:<codeblock>${RootDir}/logfiles</codeblock></p>
        <p>You can also use runtime parameters in the code developed for a JavaScript Evaluator or a
            Jython Evaluator processor. For example, the following line of JavaScript code assigns
            the value of the NewFieldValue parameter to a map
            field:<codeblock>records[i].value.V= ${NewFieldValue}</codeblock></p>
    </conbody>
</concept>
