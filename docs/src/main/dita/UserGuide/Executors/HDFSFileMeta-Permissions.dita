<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_zr1_5ck_rx">
 <title>Defining the Owner, Group, Permissions, and ACLs</title>
 <conbody>
  <p><indexterm>HDFS File Metadata executor<indexterm>defining the owner, group, permissions, and
                    ACLs</indexterm></indexterm>You can use the HDFS File Metadata executor to
            define the file owner, group, file permissions, and the access control list (ACL) for
            existing files or the empty file created by the executor.<note type="important">When the
                executor changes permissions, it removes existing permissions and implements the
                requested permissions. The executor does not add permissions to the existing
                permissions, so be sure to configure permissions exactly how you want
            them.</note></p>
        <p>You can set permissions using any combination of the following methods: <dl>
                <dlentry>
                    <dt>Define a new owner and group</dt>
                    <dd>You can define the owner and group for files. When you use this option, you
                        must enter both an owner and a group name. </dd>
                </dlentry>
                <dlentry>
                    <dt>Set file permissions using the octal or symbolic formats</dt>
                    <dd>You can set file permissions by entering the permissions you want to use in
                        octal or symbolic format. </dd>
                    <dd>For example, you can use the following octal format to make files
                        read-only:<codeblock>0444</codeblock>You can alternatively use the following
                        symbolic format to make files
                        read-only:<codeblock>-r--r--r-- </codeblock></dd>
                    <dd>To make them read-only for the user and the group, forbidding all access to
                        other users, you could use either of the following
                        formats:<codeblock>0440

-r--r-----</codeblock></dd>
                </dlentry>
            </dl><dl>
                <dlentry>
                    <dt>Define ACLs </dt>
                    <dd>You can define the ACLs for files. When you define ACLs, note that HDFS
                        expects permissions defined for the user, group, and other. You can
                        alternatively add permissions for additional users or groups. </dd>
                    <dd>Use the following format to define
                        ACLs:<codeblock>user::&lt;permissions>,group::&lt;permissions>,other::&lt;permissions>\
[,&lt;user | group>:&lt;user or group name:&lt;permissions>]</codeblock></dd>
                    <dd>Define permissions using the symbolic format, with r, w, x or - representing
                        the permission type. </dd>
                    <dd>For example, the following ACLs allow read access for the user and group
                        only:<codeblock>user::r--,group::r--,other::–-</codeblock></dd>
                    <dd>If you wanted to allow read access to the operations group in addition to
                        the group associated with the file, you would enter the following
                        permissions:<codeblock>user::r--,group::r--,other::–-,group:operations:r--</codeblock></dd>
                </dlentry>
            </dl></p>
 </conbody>
</concept>
