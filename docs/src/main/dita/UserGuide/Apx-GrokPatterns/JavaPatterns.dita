<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_xq3_3wq_wr">
 <title>Java Grok Patterns</title>
 <conbody>
  <p>You can use the following Java-related grok patterns to define the structure of log data:<dl>
    <dlentry>
     <dt>JAVACLASS</dt>
     <dd>(?:[a-zA-Z$_][a-zA-Z$_0-9]*\.)*[a-zA-Z$_][a-zA-Z$_0-9]*</dd>
     <dd/>
    </dlentry>
    <dlentry>
     <dt>JAVAFILE</dt>
     <dd>(?:[A-Za-z0-9_. -]+)</dd>
     <dd>A space character is allowed to match special cases, such as  Native Method or Unknown
      Source.</dd>
    </dlentry>
    <dlentry>
     <dt>JAVAMETHOD</dt>
     <dd> (?:(&lt;init>)|[a-zA-Z$_][a-zA-Z$_0-9]*) </dd>
    </dlentry>
    <dlentry>
     <dt>JAVASTACKTRACEPART</dt>
     <dd>%{SPACE}at
      %{JAVACLASS:class}\.%{JAVAMETHOD:method}\(%{JAVAFILE:file}(?::%{NUMBER:line})?\)</dd>
     <dd>The line number is optional in special cases, such as Native Method or Unknown Source.</dd>
    </dlentry>
   </dl></p>
 </conbody>
</concept>
