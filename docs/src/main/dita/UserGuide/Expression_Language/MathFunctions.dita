<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_m2m_s1f_lw">
 <title>Math Functions</title>
 <conbody>
  <p><indexterm>functions<indexterm>math functions</indexterm></indexterm><indexterm>math
                    functions<indexterm>description</indexterm></indexterm>Use math functions to
            perform math on numeric values. </p>
        <p conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/FunctionArgument"/>
        <p>You can use the following data types with math functions:<ul id="ul_qz1_3bf_lw">
                <li>Double</li>
                <li>Float  </li>
                <li>Integer </li>
                <li>Long </li>
                <li>String<note><ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> parses a string as a Double value if the numeric value in a String field
                        contains a dot ( . ). Otherwise, <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> parses the string as a Long value.</note></li>
            </ul></p>
        <p>The expression language provides the following math functions:<dl>
                <dlentry>
                    <dt>math:abs(&lt;number>)</dt>
                    <dd>Returns the absolute value, or positive version, of the argument. If the
                        argument is already positive, returns the original number.</dd>
                    <dd>Return type: Double, Float, Int, or Long, based on the data type of the
                        argument.</dd>
                </dlentry>
                <dlentry>
                    <dt>math:ceil(&lt;number>)</dt>
                    <dd>Returns the smallest integer greater than or equal to the argument.</dd>
                    <dd>For example, ${math:ceil(8.0+3.6)} returns 12.0.</dd>
                    <dd>Return type: Double.</dd>
                </dlentry>
                <dlentry>
                    <dt>math:floor (&lt;number>)</dt>
                    <dd>Returns the largest integer greater than or equal to the argument.</dd>
                    <dd>Return type: Double.</dd>
                </dlentry>
                <dlentry>
                    <dt>math:max(&lt;number1>, &lt;number2>)</dt>
                    <dd>Returns the greater of two arguments.</dd>
                    <dd>For example, if the value of the tip_amount field is 2.5 and the value of
                        the fare_amount field is 12.5, then ${math:max(record:value("/tip_amount"),
                        record:value("/fare_amount"))} returns 12.5.</dd>
                    <dd>Return type: Double, Float, Int, or Long, based on the data type of the
                        argument.</dd>
                </dlentry>
                <dlentry>
                    <dt>math:min(&lt;number1>, &lt;number2>)</dt>
                    <dd>Returns the lesser of two arguments.</dd>
                    <dd>Return type: Double, Float, Int, or Long, based on the data type of the
                        argument.</dd>
                </dlentry>
                <dlentry>
                    <dt>math:round(&lt;number>)</dt>
                    <dd>Returns the closest integer to the argument, rounding up for ties.</dd>
                    <dd>Return type: Double or Long.</dd>
                </dlentry>
            </dl></p>
 </conbody>
</concept>
