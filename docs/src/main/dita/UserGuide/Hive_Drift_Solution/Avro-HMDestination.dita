<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vh3_s4n_fw">
 <title>The Hive Metastore Destination</title>
 <shortdesc>Now to process the metadata records - and to automatically create and update tables in
        Hive - you need the Hive Metastore destination.</shortdesc>
 <conbody>
  <p>Connect the destination to the second output stream of the processor and configure the
            destination. Configuration of this destination is a breeze - just configure the Hive
            connection information and optionally configure some advanced options. </p>
        <p>The destination connects to Hive the same way the processor does so you can reuse that
            connection information:</p>
        <p><image href="../Graphics/HiveMeta-Ex-Dest.png" id="image_imx_5pn_fw" scale="70"/></p>
        <p>When the Drift Synchronization Solution for Hive processes Avro data, the destination
            includes the <xref href="../Destinations/HiveMetastore-TableGen.dita#concept_wyr_5jv_hw"
                >Stored As Avro clause in table creation queries</xref>, by default. You can change
            that and configure other advanced properties on the Advanced tab. You can generally use
            the defaults for the advanced properties, so let's do that. </p>
        <p>Now, the beauty of the Hive Metastore destination is this: when the destination gets a
            metadata record that says you need a new table for a new web service, it creates the
            table with all the necessary columns so you can write the record (that triggered that
            metadata record) to the table.</p>
        <p>
            <ph conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HM-CStudy-HiveMetastoreUpdates-ph"/></p>
        <p>That covers the metadata, but what about the data?  </p>
 </conbody>
</concept>
