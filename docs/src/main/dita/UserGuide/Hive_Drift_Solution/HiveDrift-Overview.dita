<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_phk_bdf_2w">
    <title>Drift Synchronization Solution for Hive</title>
    <conbody>
        <p><indexterm>Drift Synchronization Solution for
                Hive<indexterm>overview</indexterm></indexterm><indexterm>Hive Drift
                    Solution<index-see>Drift Synchronization Solution for
                Hive</index-see></indexterm>The <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HiveDrift-ph"/>
            detects drift in incoming data and updates corresponding Hive tables. Previously known
            as the Hive Drift Solution, the <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HiveDrift-ph"/>
            enables creating and updating Hive tables based on record requirements and writing data
            to HDFS or MapR FS based on record header attributes. You can use the full functionality
            of the solution or individual pieces, as needed. </p>
        <p>The <ph conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HiveDrift-ph"
            /> supports processing Avro and Parquet data. When processing Parquet data, the solution
            generates temporary Avro files and uses the MapReduce executor to convert the Avro files
            to Parquet. </p>
        <p>The solution is compatible with Impala, but requires additional steps to refresh the
            Impala metadata cache.</p>
        <p> </p>
    </conbody>
</concept>
