<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_t2t_lp5_xz">
 <title>Case Study: Sending Email</title>
 <conbody>
  <p><indexterm>Email executor<indexterm>case study</indexterm></indexterm><indexterm>dataflow
                trigger case study<indexterm>sending email</indexterm></indexterm>You can configure
            a pipeline to send email upon <xref
                href="../Pipeline_Configuration/Notifications.dita#concept_mtn_k4j_rz">pipeline
                state change</xref> and upon <xref
                href="../Alerts/EmailforAlerts-Configuring.dita#task_f3v_1hw_1r">triggering an
                alert</xref>. Both methods can be useful in their own way. In this case study, we'll
            use an Email executor to send email upon receiving an event. </p>
        <p>Say you have a pipeline that reads from a database using the JDBC Query Consumer origin,
            uses a Jython Evaluator to evaluate the data and generate events for invalid
            transactions, and writes to HDFS. You want this pipeline to send two types of email: one
            when the Jython Evaluator finds an invalid transaction and one when the JDBC Query
            Consumer fails to complete a query. </p>
        <p>To do this, you simply route the events from the origin and processor to the Email
            executor and configure two email messages. The Email executor allows you to specify a
            condition for sending email and to use expressions to create customized email that
            provides event-related information to the recipient.</p>
        <p>Say this is the original pipeline:</p>
        <p><image href="../Graphics/Event-Email-Pipe.png" id="image_b4k_htw_xz" scale="70"/></p>
        <p>
            <ol id="ol_vmp_psw_xz">
                <li>First, configure the JDBC Query Consumer to generate events. <p>On the
                            <wintitle>General</wintitle> tab of the origin, select the
                            <uicontrol>Produce Events</uicontrol> property. </p><p>Now, the event
                        output stream becomes available. Note that the JDBC Query Consumer generates
                        several types of events. You know this because you checked the <xref
                            href="../Origins/JDBCConsumer-EventRecord.dita#concept_rzl_s1t_kz">Event
                            Record</xref> section of the JDBC Query Consumer documentation. Every
                        event-generating stage has event details in a similar section. </p></li>
                <li>Now configure the Jython Evaluator to generate events in the same way.<p>Of
                        course, the Jython Evaluator will only generate events if your script is set
                        up to do so. But you also need to enable the <uicontrol>Produce
                            Events</uicontrol> property on the <wintitle>General</wintitle> tab.
                    </p></li>
                <li>Connect both event streams to an Email executor. <p><image
                            href="../Graphics/Event-Email-ExecutorPipe.png" id="image_zl2_gxw_xz"
                            scale="70"/></p></li>
                <li>Now since the JDBC Query Consumer generates several types of events, you need to
                    configure the Email executor to send the first email only after receiving a
                    query failure event:<ol id="ol_ghk_ymc_yz">
                        <li>The query failure event has the jdbc-query-failure event type, so on the
                                <wintitle>Email</wintitle> tab, you use the following condition:
                            <codeblock>${record:eventType() == 'jdbc-query-failure'}</codeblock></li>
                        <li>All of the email properties allow expressions, so for the email subject,
                            you might include the pipeline name as
                            follows:<codeblock>Query failure in ${pipeline:title()}!</codeblock></li>
                        <li>When you compose the email body, you might use additional expressions to
                            include information about the pipeline and information included in the
                            event record in the email. <p>Remember, the Event Record documentation
                                lists all header attributes and fields in the event record, so you
                                can refer to it when configuring the email. For more information
                                about using expressions in email, see <xref
                                    href="../Executors/Email-Expressions.dita#concept_tgb_vbm_wz"
                                />.</p><p>For this email, you might include the following
                                information:
                                <codeblock>Pipeline ${pipeline:title()} encountered an error. 

At ${time:millisecondsToDateTime(record:eventCreation() * 1000)}, the JDBC Query
Consumer failed to complete the following query: ${record:value('/query')}

Only the following number of rows were processed: ${record:value('/row-count')} </codeblock></p></li>
                    </ol><p>The email configuration looks like this:</p><p><image
                            href="../Graphics/Event-Email-Origin.png" id="image_cck_wbx_xz"
                            scale="65"/></p></li>
                <li>Click the <uicontrol>Add</uicontrol> icon to configure the email for the Jython
                    Evaluator events. <p>Since you want to send an email for each event that the
                        Jython Evaluator generates, for the condition, you can use the event type
                        defined in the script. Let's say it's "invalidTransaction". As with the
                        first email, you can include additional information about the pipeline and
                        data from the event record in the email body, as follows:</p><p><image
                            href="../Graphics/Event-Email-Jython.png" id="image_i2g_ydx_xz"
                    /></p></li>
            </ol>
        </p>
        <p>When you run the pipeline, the specified email recipients receive custom messages each
            time the Email executor receives the specified events. And the email recipients can act
            on the information included in the email without further ado. </p>
 </conbody>
</concept>
