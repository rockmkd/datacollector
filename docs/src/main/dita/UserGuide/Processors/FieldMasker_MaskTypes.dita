<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vwp_gh4_wq">
 <title>Mask Types</title>
 <shortdesc>You can use the following mask types to mask data: </shortdesc>
 <conbody>
  <p>
   <dl>
    <dlentry>
     <dt>Fixed-length</dt>
     <dd><indexterm>Field Masker processor<indexterm>mask
       types</indexterm></indexterm><indexterm>mask types<indexterm>Field
       Masker</indexterm></indexterm>Replaces values with a fixed-length mask. Use when you want to
      mask variations in the length of the data. </dd>
     <dd>The following example uses a fixed-length mask to hide passwords:<simpletable frame="none"
       relcolwidth="1.0* 1.0*" id="simpletable_zyf_5cj_yq">
       <strow>
        <stentry>
         <codeblock><uicontrol>Original Password</uicontrol> 
1234
donKey
022367snowfall</codeblock>
        </stentry>
        <stentry>
         <codeblock><uicontrol>Fixed-Length Mask</uicontrol>
asd302kd0
2v03msO3d
L92m1sN3q</codeblock>
        </stentry>
       </strow>
      </simpletable></dd>
    </dlentry>
    <dlentry>
     <dt>Variable-length</dt>
     <dd>Replaces values with a variable-length mask. Use when you want to reveal the lengths of the
      original data. </dd>
     <dd>The following example uses a variable length mask to hide the same passwords:<simpletable
       frame="none" relcolwidth="1.0* 1.0*" id="simpletable_jfq_bdj_yq">
       <strow>
        <stentry>
         <codeblock><uicontrol>Original Password</uicontrol>
1234
donKey
022367snowfall</codeblock>
        </stentry>
        <stentry>
         <codeblock><uicontrol>Variable-Length Mask</uicontrol>
asd3
2v03ms
L92m1sN3q0jaOmE67Ws</codeblock>
        </stentry>
       </strow>
      </simpletable></dd>
    </dlentry>
    <dlentry>
     <dt>Custom</dt>
     <dd>Replaces values with a mask based on a user-defined pattern. When you define the pattern
      for the mask, you can use a hash mark (#) to reveal the character in that location. All other
      characters are used as constants in the mask. </dd>
     <dd>The following example uses <codeph>###-xxx-xxxx</codeph> as the mask pattern to reveal the
      area code of a phone number while masking the rest of the number:<simpletable frame="none"
       relcolwidth="1.0* 1.0*" id="simpletable_xwn_ms3_cr">
       <strow>
        <stentry>
         <codeblock><uicontrol>Original Phone Number</uicontrol>
415-333-3434
301-999-0987
617-567-8888</codeblock>
        </stentry>
        <stentry>
         <codeblock><uicontrol>Custom Mask (###-xxx-xxxx)</uicontrol>
415-xxx-xxxx
301-xxx-xxxx
617-xxx-xxxx</codeblock>
        </stentry>
       </strow>
      </simpletable><note type="tip">To avoid confusing masking characters for real data, use one
       masking character instead of a mix of masking characters.</note></dd>
     <dd>The length of a custom mask is either the original data length or the mask pattern length,
      whichever is smaller. For example, you use <codeph>###xx</codeph> as the mask pattern to
      reveal the three digit zip code range while masking the rest of the zip code. The mask pattern
      length is five characters. When the Field Masker applies the mask to an original zip code with
      ten characters, it uses the minimum length of five characters, removing the last five
      characters of the original zip code. When the processor applies the mask to an original zip
      code with three characters, it uses the minimum length of three characters, revealing those
      three characters and then not masking any characters, as follows:</dd>
     <dd>
      <simpletable frame="none" relcolwidth="1.0* 1.0*" id="simpletable_xwn_ms5_br">
       <strow>
        <stentry>
         <codeblock><uicontrol>Original Zip Code</uicontrol>
94105
94086-6161
80123
703</codeblock>
        </stentry>
        <stentry>
         <codeblock><uicontrol>Custom Mask (###xx)</uicontrol>
941xx
940xx
801xx
703</codeblock>
        </stentry>
       </strow>
      </simpletable>
     </dd>
    </dlentry>
    <dlentry>
     <dt>Regular Expression</dt>
     <dd>Replaces groups of values with a variable-length mask. You define the data structure with a
      regular expression, using parentheses to define groups of values. You can optionally specify
      any groups of data that you do not want to mask. If you do not specify groups, Field Masker
      masks all values. </dd>
     <dd>For example, you use the following regular expression to describe data that appends a
      five-digit code to a social security
      number:<codeblock>([0-9]{5}) - ([0-9]{3}-[0-9]{2}-[0-9]{4}) </codeblock></dd>
     <dd>The parentheses creates two groups of data. If you configure the stage to reveal the first
      group, then the results of the mask might look as
      follows:<codeblock><uicontrol>Regex Mask</uicontrol>
30529-xxx-xx-xxxx
10384-xxx-xx-xxxx
95833-xxx-xx-xxxx</codeblock></dd>
    </dlentry>
   </dl>
  </p>
 </conbody>
</concept>
